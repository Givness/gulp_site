html{color:#000}body{background-color:silver}nav{background-color:gray;padding:0;margin:0 0 1%;text-align:right}nav a{display:inline-block;padding:1%;color:#fff;text-decoration:none;margin:0 1vw}nav a.active,nav a:hover{background-color:khaki;color:#000;border-radius:5px}article section,div.images,footer,nav{box-shadow:4px 5px 10px rgba(0,0,0,.4);border-radius:5px}article,div.images{width:80%;display:grid}div.images{grid-template-columns:repeat(5,1fr);grid-gap:.5%;background-color:#f1f1f1;margin:1% auto;padding:1%}div.images img{width:100%}div.images img:hover{transition:.2s;transform:scale(1.1);box-shadow:0 0 15px rgba(0,0,0,.4)}@media screen and (max-width:600px){div.images{grid-template-columns:1fr;grid-gap:0}div.images img{width:100%;margin:1% auto}}article{margin:auto;grid-template-columns:repeat(3,1fr);grid-gap:4%}article section,footer{margin:0 0 1%}article section{display:grid;align-items:center;background-color:#f1f1f1;padding:2%}article section h2{margin:0;text-align:center}article section img{width:50%;margin:0 auto}article section p{margin:0 5%}article section:hover{transition:.2s;background-color:khaki}@media screen and (max-width:600px){article{grid-template-columns:1fr;grid-gap:0;grid-template-rows:1fr 1fr 1fr}}footer{background-color:#505050;padding:0}footer h4{padding:5px;color:#f8f8f8}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
